/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package Vista;

import DAO.DAOException;
import DAO.DAOManager;
import DAOMySQL.MySQLDAOManager;
import Modelo.Ingrediente;
import Modelo.Platillo;
import Modelo.PlatilloIngrediente;
import java.math.BigDecimal;
import java.text.DecimalFormat;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.TableColumn;
import javax.swing.table.TableColumnModel;

/**
 *
 * @author Wyrnm
 */
public class JDPlatillos extends javax.swing.JDialog {

    // DAO Manager para acceder a los DAOs
    private DAOManager manager = null;

    // Modelo para la tabla tblIngredientes
    private IngredientesTableModel model;

    // Para manipular columnas de la tabla
    TableColumnModel columnModel = null;

    // Campos del formulario
    private int idPlatillo;
    private String nombre;
    private String tipo;
    private BigDecimal precio;

    /**
     * Creates new form JDPlatillos
     *
     * @param parent
     * @param modal
     */
    public JDPlatillos(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();

        this.manager = new MySQLDAOManager();
        inicializarListaIngredientes();

        setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtIdPlatillo = new javax.swing.JTextField();
        txtNombrePlatillo = new javax.swing.JTextField();
        txtTipoPlatillo = new javax.swing.JTextField();
        btnEliminar = new javax.swing.JButton();
        btnGuardar = new javax.swing.JButton();
        btnNuevo = new javax.swing.JButton();
        txtPrecioPlatillo = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        txtBuscarPorId = new javax.swing.JTextField();
        btnBuscar = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        btnAgregar = new javax.swing.JButton();
        btnEliminarIngrediente = new javax.swing.JButton();
        txtIdIngrediente = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblIngredientes = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setText("Id. Platillo:");

        jLabel2.setText("Nombre del platillo:");

        jLabel3.setText("Tipo del platillo:");

        jLabel4.setText("Precio del platillo:");

        txtIdPlatillo.setText("-1");
        txtIdPlatillo.setEnabled(false);

        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        btnGuardar.setText("Guardar");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        btnNuevo.setText("Nuevo");
        btnNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoActionPerformed(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Busca una entrada por:"));

        jLabel5.setText("Id. Platillo:");

        btnBuscar.setText("Buscar");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtBuscarPorId)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtBuscarPorId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnBuscar))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Ingredientes del platillo"));

        jLabel6.setText("<html>Agregar Nuevo Ingrediente:<br>(Escribe el id del ingrediente)</html>");

        btnAgregar.setText("Agregar");
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });

        btnEliminarIngrediente.setText("Eliminar ingrediente del platillo");
        btnEliminarIngrediente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarIngredienteActionPerformed(evt);
            }
        });

        tblIngredientes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "IdIngrediente", "Nombre", "Unidad y medida"
            }
        ));
        jScrollPane1.setViewportView(tblIngredientes);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtIdIngrediente)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnAgregar))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(btnEliminarIngrediente)
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 461, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtIdIngrediente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnAgregar)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnEliminarIngrediente)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel1)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel2)
                                .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtNombrePlatillo, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtTipoPlatillo)
                            .addComponent(txtPrecioPlatillo)
                            .addComponent(txtIdPlatillo)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnNuevo, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtIdPlatillo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtNombrePlatillo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtTipoPlatillo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtPrecioPlatillo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnEliminar)
                    .addComponent(btnNuevo)
                    .addComponent(btnGuardar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        // Llamamos al método validar para ver si procede a guardar los datos
        if (validar()) {

            // Si idPlatillo = -1 entonces insertamos el registro
            if (idPlatillo == -1) {

                // Llamamos al constructor para crear un objeto de tipo PlatilloPla
                Platillo miPlatillo = new Platillo(nombre, tipo, precio);

                try {
                    manager.getPlatilloDAO().insertar(miPlatillo);
                    txtIdPlatillo.setText(Integer.toString(miPlatillo.getIdPlatillo()));
                    JOptionPane.showMessageDialog(null, "Los datos han sido guardados");

                } catch (DAOException ex) {
                    imprimirMensajeDeErrorDAO(ex);
                }
            } else {// Si es diferente a -1 quiere decir que se está realizando una modificación

                // Llamamos al constructor para crear un objeto de tipo Platillo
                Platillo miPlatillo = new Platillo(idPlatillo, nombre, tipo, precio);

                try {
                    manager.getPlatilloDAO().modificar(miPlatillo);
                    JOptionPane.showConfirmDialog(null, "Los cambios han sido guardados");
                } catch (DAOException ex) {
                    imprimirMensajeDeErrorDAO(ex);
                }
            }// Fin del else
        }// Fin del if validar
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void btnNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoActionPerformed
        // Llamamos al método limpiarFormulario
        limpiarFormulario();
    }//GEN-LAST:event_btnNuevoActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        // Solo se puede eliminar si el idPlatillo es diferente a -1
        if (!txtIdPlatillo.getText().equals("-1")) {
            int idPlatillo = Integer.parseInt(txtIdPlatillo.getText());
            int respuesta = JOptionPane.showConfirmDialog(null, "¿Desea eliminar el autor con id = " + idPlatillo + "?", "Confirmar", 0);

            if (respuesta == 0) {
                try {
                    // Eliminamos el platillo
                    manager.getPlatilloDAO().eliminar(idPlatillo);

                    // Si no ocurre una exceptción
                    JOptionPane.showMessageDialog(null, "El platillo ha sido eliminado");
                } catch (DAOException ex) {
                    imprimirMensajeDeErrorDAO(ex);
                }
            }
        } else {
            JOptionPane.showMessageDialog(null, "Busca un platillo para poder eliminarlo");
        }
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        try {
            // Obtenemos el id. del Platillo a buscar
            int idABuscar = (Integer) Integer.parseInt(txtBuscarPorId.getText());

            // Obtenemos los datos del platillo y lo asignamos al objeto miPlatillo
            Platillo miPlatillo = manager.getPlatilloDAO().obtener(idABuscar);

            if (miPlatillo != null) {
                // Mostramos los datos en la caja de texto
                idPlatillo = miPlatillo.getIdPlatillo();
                txtIdPlatillo.setText(Integer.toString(idPlatillo));
                txtNombrePlatillo.setText(miPlatillo.getNombre());
                txtTipoPlatillo.setText(miPlatillo.getTipo());
                DecimalFormat formato = new DecimalFormat("#0.00");
                txtPrecioPlatillo.setText(formato.format(miPlatillo.getPrecio()));

                actualizarListaIngredientes(idABuscar);

            } else {
                JOptionPane.showMessageDialog(null, "No se encontró ningún platillo con ese Id");

            }

        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(null, "Especifica " + "un número decimal", "Error", JOptionPane.ERROR_MESSAGE);
        } catch (DAOException ex) {
            imprimirMensajeDeErrorDAO(ex);
        }
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed
        if (!txtIdPlatillo.getText().equals("-1")) {
            int idPlatillo = Integer.parseInt(txtIdPlatillo.getText());

            if (!txtIdIngrediente.getText().trim().equals("")) {
                int idIngrediente = Integer.parseInt(txtIdIngrediente.getText());
                try {
                    // Verificamos que el ingrediente exista
                    Ingrediente ingrediente = manager.getIngredienteDAO().obtener(idIngrediente);

                    // Si no genera excepción, lo vinculamos con el platillo
                    PlatilloIngrediente pi = new PlatilloIngrediente(idPlatillo, idIngrediente);
                    manager.getPlatilloIngredienteDAO().insertar(pi);

                    actualizarListaIngredientes(idPlatillo);

                    JOptionPane.showMessageDialog(null, "Ingrediente agregado al platillo");
                } catch (DAOException ex) {
                    imprimirMensajeDeErrorDAO(ex);
                    txtIdIngrediente.requestFocus();
                    txtIdIngrediente.selectAll();
                }
            } else {
                JOptionPane.showMessageDialog(null, "Especifica el ID del ingrediente");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Busca primero el platillo");
        }
    }//GEN-LAST:event_btnAgregarActionPerformed

    private void btnEliminarIngredienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarIngredienteActionPerformed
        if (tblIngredientes.getRowCount() > 0) {
            int idIngrediente = Integer.parseInt(tblIngredientes.getValueAt(tblIngredientes.getSelectedRow(), 0).toString());

            if (JOptionPane.showConfirmDialog(rootPane, "¿Seguro que deseas eliminar el ingrediente ID: " + idIngrediente + " de este platillo?",
                    "Eliminar Ingrediente", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE) == JOptionPane.YES_OPTION) {

                int idPlatillo = Integer.parseInt(txtIdPlatillo.getText());

                PlatilloIngrediente pi = new PlatilloIngrediente(idPlatillo, idIngrediente);
                try {
                    manager.getPlatilloIngredienteDAO().eliminar(pi);
                    actualizarListaIngredientes(idPlatillo);

                    JOptionPane.showMessageDialog(null, "Ingrediente eliminado del platillo");
                } catch (DAOException ex) {
                    imprimirMensajeDeErrorDAO(ex);
                }
            }
        }
    }//GEN-LAST:event_btnEliminarIngredienteActionPerformed

    /**
     * Este método permite limpiar las cajas de texto y ubicar el focus en la
     * caja de texto del nombre
     */
    private void limpiarFormulario() {
        // Asignamos el string -1 a la caja de texto del id. platillo
        txtIdPlatillo.setText("-1");

        // Limpiamos las otras cajas de texto
        txtNombrePlatillo.setText("");
        txtTipoPlatillo.setText("");
        txtPrecioPlatillo.setText("");

        // Ubicamos el focus en la caja de texto del nombre
        txtNombrePlatillo.requestFocus();
        model.limpiarDatos();
        txtBuscarPorId.setText("");
        txtIdIngrediente.setText("");
    }// Fin del método limpiarFormulario

    /**
     * Valida los datos de entrada del formulario
     *
     * @return true si todos son validados correctamente, false ne caso contraio
     */
    private boolean validar() {
        boolean validacion = false;

        if (txtNombrePlatillo.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Especifica el nombre del platillo");
            txtNombrePlatillo.requestFocus();
            return validacion;
        }

        if (txtTipoPlatillo.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Especifica el tipo del platillo");
            txtTipoPlatillo.requestFocus();
            return validacion;
        }

        if (txtPrecioPlatillo.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Especifica el orecio del platillo");
            txtPrecioPlatillo.requestFocus();
            return validacion;
        }
        return true;
    }// Fin del método validar

    /**
     * Imprime un mensaje de error personalizado para aquellos errores que son
     * producidos por el acceso a la base de datos
     *
     * @param ex objeto de tipo DAOException
     */
    private void imprimirMensajeDeErrorDAO(DAOException ex) {
        // Si getMessage existe obtenemos su valor
        String mensajeError;

        try {
            mensajeError = ex.getCause().getMessage();
        } catch (NullPointerException error) {
            mensajeError = "";
        }

        JOptionPane.showMessageDialog(null,
                ex.getMessage() + "\n"
                + "Mensaje: " + ex.getCause().getMessage(),
                "Error", JOptionPane.ERROR_MESSAGE);
    }// Fin del método imprimirMensajeDeError

    private void inicializarListaIngredientes() {
        model = new IngredientesTableModel(manager.getPlatilloIngredienteDAO());

        tblIngredientes.setModel(model);

        // Establecer el ancho de 3 columnas
        setJTableColumnsWidth(tblIngredientes, 480, 100, 130, 250);
    }

    /**
     * Este método redimensiona el ancho de las celdas de nuestra tabla
     * tblTitulos
     *
     * @param table
     * @param tablePreferredWidth
     * @param percentages
     */
    public static void setJTableColumnsWidth(JTable table, int tablePreferredWidth, double... percentages) {
        double total = 0;
        for (int i = 0; i < table.getColumnModel().getColumnCount(); i++) {
            total += percentages[i];
        }

        for (int i = 0; i < table.getColumnModel().getColumnCount(); i++) {
            TableColumn column = table.getColumnModel().getColumn(i);
            column.setPreferredWidth((int) (tablePreferredWidth * (percentages[i] / total)));
        }
    }// Fin del método setJTable...

    private void actualizarListaIngredientes(int idPlatillo) throws DAOException {
        model.updateModel(idPlatillo);
        model.fireTableDataChanged();
        setJTableColumnsWidth(tblIngredientes, 480, 100, 130, 250);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JDPlatillos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JDPlatillos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JDPlatillos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JDPlatillos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                JDPlatillos dialog = new JDPlatillos(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnEliminarIngrediente;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnNuevo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblIngredientes;
    private javax.swing.JTextField txtBuscarPorId;
    private javax.swing.JTextField txtIdIngrediente;
    private javax.swing.JTextField txtIdPlatillo;
    private javax.swing.JTextField txtNombrePlatillo;
    private javax.swing.JTextField txtPrecioPlatillo;
    private javax.swing.JTextField txtTipoPlatillo;
    // End of variables declaration//GEN-END:variables

}
